<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.graphql-java-generator</groupId>
		<artifactId>graphql-maven-plugin-project</artifactId>
		<version>0-SNAPSHOT</version>
	</parent>

	<artifactId>graphql-java-client-runtime</artifactId>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>
		Code used by the generated code, at runtime, when in client
		mode (that is: when consuming a GraphQL API)
	</description>

	<build>
		<resources>
			<resource>
				<!-- Due to Spring Boot, the filtering placeholder is @..@
				(instead of 
					${..}) -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/sources.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>assemble-sources</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<!-- Allow JUnit to access the test classes -->
					<argLine>
						--add-opens com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_client_runtime/com.graphql_java_generator.domain.client.allGraphQLCases=com.fasterxml.jackson.databind,com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_common_runtime,spring.core,spring.beans,spring.context
						--add-opens com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_client_runtime/com.graphql_java_generator.domain.client.forum=com.fasterxml.jackson.databind,com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_common_runtime,spring.core,spring.beans,spring.context
						--add-opens com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_client_runtime/com.graphql_java_generator.it_tests.spring_graphql_one_graphql_repo=spring.core,spring.beans,spring.context
						--add-opens com.graphql_java_generator.graphql_maven_plugin_project.graphql_java_client_runtime/com.graphql_java_generator.it_tests.spring_graphql_two_graphql_repos=spring.core,spring.beans,spring.context
					</argLine>
				</configuration>
			</plugin>
		</plugins>

	</build>


	<dependencies>
		<!-- Dependencies for tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- This dependency is here to solve an issue with Mockito that
			loads a wring version of byte-buddy -->
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
		</dependency>
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Module dependencies -->

		<!-- Dependencies within this project -->
		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-common-dependencies</artifactId>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- The spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-client</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
		</dependency>

		<!-- Other dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-client-dependencies</artifactId>
			<type>pom</type>
		</dependency -->
		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-common-runtime</artifactId>
		</dependency>

	</dependencies>


	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<reports>
							<report>javadoc-no-fork</report>
							<report>test-javadoc-no-fork</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<source>${java.version}</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>


</project>