/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.client.allGraphQLCases;

import com.graphql_java_generator.client.CustomScalarRegistry;
import com.graphql_java_generator.client.CustomScalarRegistryImpl;
import com.graphql_java_generator.customscalars.GraphQLScalarTypeIDClient;

import graphql.scalars.ExtendedScalars;

@SuppressWarnings("unused")
public class CustomScalarRegistryInitializer {

	/**
	 * Initialization of the {@link CustomScalarRegistry} with all known custom scalars, that is with all custom scalars
	 * defined in the project pom
	 */
	public static CustomScalarRegistry initCustomScalarRegistry() {
		CustomScalarRegistry customScalarRegistry = new CustomScalarRegistryImpl();

		// Registering the ID parser, for client mode
		customScalarRegistry.registerGraphQLScalarType("ID", GraphQLScalarTypeIDClient.ID, String.class);

		customScalarRegistry.registerGraphQLScalarType("Date",
				com.graphql_java_generator.customscalars.GraphQLScalarTypeDate.Date, java.util.Date.class);
		customScalarRegistry.registerGraphQLScalarType("Long", ExtendedScalars.GraphQLLong, java.lang.Long.class);
		customScalarRegistry.registerGraphQLScalarType("Base64String",
				com.graphql_java_generator.customscalars.GraphQLScalarTypeBase64String.GraphQLBase64String,
				byte[].class);
		customScalarRegistry.registerGraphQLScalarType("String",
				com.graphql_java_generator.customscalars.GraphQLScalarTypeString.String, java.lang.String.class);
		customScalarRegistry.registerGraphQLScalarType("NonNegativeInt", graphql.scalars.ExtendedScalars.NonNegativeInt,
				java.lang.Integer.class);

		CustomScalarRegistryImpl.setCustomScalarRegistry("MySchema", customScalarRegistry);
		return customScalarRegistry;
	}

}
