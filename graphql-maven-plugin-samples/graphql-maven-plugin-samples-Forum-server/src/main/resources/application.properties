# Changing the port for the GraphQL server
server.port = 8182

# This should probably not be done in production
security.enable.csrf = false

# Change the place where the schema file is stored at runtime (due to use of JPMS, see the doc)
spring.graphql.schema.location: classpath*:graphql_schema/**/

# The line below activates the websocket support (mandatory for subscriptions) on the given path
spring.graphql.websocket.path=/graphql

# Enabling graphiql (from spring-graphql)
spring.graphql.graphiql.enabled = true

# Allowing the H2 Console (the jdbc URL to use in the console is jdbc:h2:mem:testdb)
spring.h2.console.enabled=true

# Prevents the SQL schema to be automatically created. With this parameter set to false, it's up to the project to build the tables, indexes...
# (see the src/main/resource/schema.sql which does this job, in this sample) 
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none

# Necessary to avoid the hibernate "could not initialize proxy - no Session" error
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# To generate hibernate query execution logs
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# Line from here: https://medium.com/geekculture/jwt-authentication-with-oauth2-resource-server-and-an-external-authorization-server-2b8fd1524fc8
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8181
#
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:8181

