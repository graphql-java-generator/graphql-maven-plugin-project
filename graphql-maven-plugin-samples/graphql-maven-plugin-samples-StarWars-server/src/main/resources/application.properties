# Changing the port for the GraphQL server
server.port = 8443

# Setting the graphql path allows to change the server path (which is local to the context path of the deployed war)
# The line below is useless, as /graphql is the default 
spring.graphql.path: /graphql

# The schema location may not be /graphql, because of JPMS (conflic with the graphql package of graphql-java)
spring.graphql.schema.locations = classpath*:graphql_schema/**/ 

# The line below is mandatory for both activating the web socket support (it also allows to override the default path)
spring.graphql.websocket.path: /graphql


# Enabling graphiql (from spring-graphql)
spring.graphql.graphiql.enabled = true


# Allowing the H2 Console
spring.h2.console.enabled=true

# Fix the default schema (otherwise, there is a dynamic created at each execution)
spring.datasource.url=jdbc:h2:mem:testdb

# Prevents the SQL schema to be automatically created. With this parameter set to false, it's up to the project to build the tables, indexes...
# (see the src/main/resource/schema.sql which does this job, in this sample) 
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none

# Necessary to avoid the hibernate "could not initialize proxy - no Session" error
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# To generate hibernate query execution logs
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

